<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>万安</title>
  
  <subtitle>大智若愚 大智互娱</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dazhihuyu.xjp89.top/"/>
  <updated>2020-03-14T12:55:21.331Z</updated>
  <id>http://dazhihuyu.xjp89.top/</id>
  
  <author>
    <name>Jammy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot 新手入门（2）开发环境准备</title>
    <link href="http://dazhihuyu.xjp89.top/2020/03/14/SpringBoot-%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://dazhihuyu.xjp89.top/2020/03/14/SpringBoot-%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</id>
    <published>2020-03-14T12:48:01.000Z</published>
    <updated>2020-03-14T12:55:21.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、Lombok-插件安装"><a href="#1、Lombok-插件安装" class="headerlink" title="1、Lombok 插件安装"></a>1、Lombok 插件安装</h2><ol><li><p>Lombok的安装</p><p>官方下载地址：<a href="https://projectlombok.org/download" target="_blank" rel="noopener">https://projectlombok.org/download</a></p><p>【打开idea软件】–在左上角的菜单【IntelLIJ IDEA】–【Preferences…】–【Plugins】–点击【Browse repositories…】–【在左上角搜索输入lombok】–【选中Lombok Plugin】–【在右边点击Install】</p></li></ol><p>   <strong>ps:</strong>如果使用eclipse开发工具，需要到Lombok官网去下载，双击安装，选择eclipse的安装路径，然后在eclipse 的安装路径下的eclipse.ini,最后一行添加Lombok.jar 的<strong>全路径</strong>。</p><ol start="2"><li><p>pom配置依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>Lombok注释使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name = <span class="string">"t_user"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"><span class="doctag">@NonNull</span>: 标识对象是否为空，为空则抛出异常</span></span><br><span class="line"><span class="comment"><span class="doctag">@Getter</span>：自动生成Getter方法</span></span><br><span class="line"><span class="comment"><span class="doctag">@Setter</span>: 自动生成Setter</span></span><br><span class="line"><span class="comment"><span class="doctag">@ToString</span>：覆盖toString方法</span></span><br><span class="line"><span class="comment"><span class="doctag">@EqualsAndHashCode</span>:覆盖equal 和hashCode方法</span></span><br><span class="line"><span class="comment"><span class="doctag">@Data</span>： <span class="doctag">@Getter</span>、<span class="doctag">@Setter</span>、<span class="doctag">@ToString</span>,<span class="doctag">@EqualAndHashCode</span>等组合</span></span><br><span class="line"><span class="comment"><span class="doctag">@NoArgsConstructor</span>：无参构造器</span></span><br><span class="line"><span class="comment"><span class="doctag">@AllArgsConstructor</span>:全部参数构造器</span></span><br><span class="line"><span class="comment"><span class="doctag">@Slf</span>4j：默认使用slf4j的日志对象</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="2-热部署"><a href="#2-热部署" class="headerlink" title="2 热部署"></a>2 热部署</h2><p>   1.pom依赖</p>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>   2.idea 配置</p><p>   1）setting-&gt;compiler 中 勾选 Build project automatically</p><p>   2) ctrl +shift +alt +/ 选择Registry，勾选complier.automake.allow.when.app.running</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、Lombok-插件安装&quot;&gt;&lt;a href=&quot;#1、Lombok-插件安装&quot; class=&quot;headerlink&quot; title=&quot;1、Lombok 插件安装&quot;&gt;&lt;/a&gt;1、Lombok 插件安装&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Lombok的安装&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://dazhihuyu.xjp89.top/categories/JAVA/"/>
    
    
      <category term="Spring Boot" scheme="http://dazhihuyu.xjp89.top/tags/Spring-Boot/"/>
    
      <category term="Java" scheme="http://dazhihuyu.xjp89.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot新手入门（1）部署外部Tomcat配置</title>
    <link href="http://dazhihuyu.xjp89.top/2020/03/12/SpringBoot%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89%E9%83%A8%E7%BD%B2%E5%A4%96%E9%83%A8Tomcat%E9%85%8D%E7%BD%AE/"/>
    <id>http://dazhihuyu.xjp89.top/2020/03/12/SpringBoot%E6%96%B0%E6%89%8B%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89%E9%83%A8%E7%BD%B2%E5%A4%96%E9%83%A8Tomcat%E9%85%8D%E7%BD%AE/</id>
    <published>2020-03-12T14:20:01.000Z</published>
    <updated>2020-03-12T14:22:26.676Z</updated>
    
    <content type="html"><![CDATA[<p>在对Spring Boot进行开发的过程中，有的时候需要打成war进行外部的tomcat部署，经常会发现部署之后无法访问，或者报404的错误。</p><p>只需要在SpringBootApplication类同级新建一个ServletInitialize类继承与SpringBootServletInitialize，并配置入口启动类；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tomcat 部署必须</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletInitializer</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder builder)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 配置运行入口类</span></span><br><span class="line"><span class="keyword">return</span> builder.sources(Application<span class="class">.<span class="keyword">class</span>)</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps: 这里也可以都放在<strong>Application</strong> 类中，主要继承了 SpringBootServletInitializer，重写方法即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在对Spring Boot进行开发的过程中，有的时候需要打成war进行外部的tomcat部署，经常会发现部署之后无法访问，或者报404的错误。&lt;/p&gt;
&lt;p&gt;只需要在SpringBootApplication类同级新建一个ServletInitialize类继承与Sprin
      
    
    </summary>
    
    
    
      <category term="Spring Boot" scheme="http://dazhihuyu.xjp89.top/tags/Spring-Boot/"/>
    
      <category term="Java" scheme="http://dazhihuyu.xjp89.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Linux运维学习_centos7 安装JAVA</title>
    <link href="http://dazhihuyu.xjp89.top/2020/03/12/Linux%E8%BF%90%E7%BB%B4%E5%AD%A6%E4%B9%A0-centos7-%E5%AE%89%E8%A3%85JAVA/"/>
    <id>http://dazhihuyu.xjp89.top/2020/03/12/Linux%E8%BF%90%E7%BB%B4%E5%AD%A6%E4%B9%A0-centos7-%E5%AE%89%E8%A3%85JAVA/</id>
    <published>2020-03-12T14:15:43.000Z</published>
    <updated>2020-03-13T01:23:32.534Z</updated>
    
    <content type="html"><![CDATA[<p>​    一直做开发，之前都是使用Tomcat部署，大部分情况都是在windows环境下，现在互联网发展太快，都是需要后台在阿里云等云厂商的服务器下进行部署，第一步就是安装JDK环境</p><p>1.查看系统是否安装了jdk；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep jdk</span><br></pre></td></tr></table></figure><p>2.下载Linux版本的jdk</p><p>下载网站：<a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</a></p><p>文件名如：jdk-8u181-linux-x64.tar.gz</p><p>3.上传到Linux 服务器目录上，可以使用Xftp，将本地下载好的文件上传到某文件目录下；</p><p>4.进入该目录下，解压安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u181-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p>分别是四个参数<br>x : 从 tar 包中把文件提取出来<br>z : 表示 tar 包是被 gzip 压缩过的，所以解压时需要用 gunzip 解压<br>v : 显示详细信息<br>f  xxx.tar.gz :  指定被处理的文件是 xxx.tar.gz</p><p>解压后可以查看解压文件</p><p>5.移动到某个文件夹下（非必须项）</p><p>移动到/usr/java目录下，需要提前先创建java目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/java</span><br><span class="line">mv jdk1.8.0_181/ /usr/java/jdk1.8.0_181/</span><br></pre></td></tr></table></figure><p>6.配置环境变量</p><p>打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/profile #固定的目录，不需要改</span><br></pre></td></tr></table></figure><p>在最后一行插入(插入命令，单击i)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_181</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_181/jre</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/jre/lib.rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>编辑完成之后需要按ESC退出编辑，然后输入:wq保存退出。</p><p>重新加载配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>7.测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​    一直做开发，之前都是使用Tomcat部署，大部分情况都是在windows环境下，现在互联网发展太快，都是需要后台在阿里云等云厂商的服务器下进行部署，第一步就是安装JDK环境&lt;/p&gt;
&lt;p&gt;1.查看系统是否安装了jdk；&lt;/p&gt;
&lt;figure class=&quot;hig
      
    
    </summary>
    
    
      <category term="DevOps" scheme="http://dazhihuyu.xjp89.top/categories/DevOps/"/>
    
    
      <category term="DevOps" scheme="http://dazhihuyu.xjp89.top/tags/DevOps/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 启动配置总结</title>
    <link href="http://dazhihuyu.xjp89.top/2020/01/02/Spring-Boot-%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://dazhihuyu.xjp89.top/2020/01/02/Spring-Boot-%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93/</id>
    <published>2020-01-02T10:09:06.000Z</published>
    <updated>2020-03-13T01:21:56.181Z</updated>
    
    <content type="html"><![CDATA[<p> Spring Boot的基本使用教程中，经常会有一些细节问题值得我们注意，今天主要是总结一下使用过程中的一些小细节。</p><h1 id="1、pom-文件"><a href="#1、pom-文件" class="headerlink" title="1、pom 文件"></a>1、pom 文件</h1><p>maven的搭建就不说了，如果需要把resources 目录下的资源加进来需要配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>$&#123;basedir&#125;/src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.yaml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/application*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-boot-starter-parent 作用：</p><p>1）jar包版本管理；</p><p>2）配置文件的过滤；</p><p>3）常用插件的管理；</p><p>最核心的功能是管理了SpringBoot所依赖的所有jar包，它里面有很多的插件，如果不用这个需要自己配置很多内容；</p><h1 id="2、-SpringBootApplication"><a href="#2、-SpringBootApplication" class="headerlink" title="2、@SpringBootApplication"></a>2、<code>@SpringBootApplication</code></h1><p>Spring提供了三种方式的配置：1）xml文件配置；2）annotation配置；3）<code>JAVA类配置</code>；<code>Spring4</code> 之后就推崇使用类配置的方式。<code>@SpringBootApplication</code>的底层是用<code>@SpringBootConfiguration</code>进行注解，而<code>@SpringBootConfiguration</code>是被<code>@Configuration</code>注解。</p><p><code>SpringBootConfiguration</code>的注解的作用：</p><p>1）标志该类为一个配置类；</p><p>2）指定扫描的包，便于Spring IOC 容器对其进行实例和生命周期管理；</p><p>3）自动配置，通过引入jar包，猜测用户的意图进行自动化配置。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; Spring Boot的基本使用教程中，经常会有一些细节问题值得我们注意，今天主要是总结一下使用过程中的一些小细节。&lt;/p&gt;
&lt;h1 id=&quot;1、pom-文件&quot;&gt;&lt;a href=&quot;#1、pom-文件&quot; class=&quot;headerlink&quot; title=&quot;1、pom 文件&quot;
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://dazhihuyu.xjp89.top/categories/JAVA/"/>
    
    
      <category term="Spring Boot" scheme="http://dazhihuyu.xjp89.top/tags/Spring-Boot/"/>
    
      <category term="Java" scheme="http://dazhihuyu.xjp89.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>博客建立的初衷</title>
    <link href="http://dazhihuyu.xjp89.top/2019/12/29/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E7%9A%84%E5%88%9D%E8%A1%B7/"/>
    <id>http://dazhihuyu.xjp89.top/2019/12/29/%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E7%9A%84%E5%88%9D%E8%A1%B7/</id>
    <published>2019-12-29T13:35:52.000Z</published>
    <updated>2019-12-29T14:19:05.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h1><p>在很早的时候我就搭建了自己的github 博客，打算写点东西，最早的博客是2007年搭建的，那时候都是在抒发自己的一些情感。最近这些年一直在做技术，其实也看了不少别人的东西，写一篇博客是一件很简单的事情，但是能每天坚持一件简单的事情，一直不间断，那就是一件不凡的事情。</p><h1 id="2、目的"><a href="#2、目的" class="headerlink" title="2、目的"></a>2、目的</h1><h2 id="1、孜孜不倦的学习"><a href="#1、孜孜不倦的学习" class="headerlink" title="1、孜孜不倦的学习"></a>1、孜孜不倦的学习</h2><p>作为软件开发人员，是需要不断的去学习新的技术和知识，虽然外界传IT行业是薪酬比较高的，但是相对来说需要学习的时间也比较长。新技术的不断更新迭代，信息化项目永无止境，早就现在从业者也越来越多，技术也不断革新，发展越来越快。我也经常学习各种技术，看各种大神的博客、公众号等内容，但是看多了不实践、不做笔记始终还是会忘记。所以我想建立博客带着我一起去实践一起去学习，博客的第一个目的就是帮我自己把笔记做好。</p><h2 id="2、团队分享"><a href="#2、团队分享" class="headerlink" title="2、团队分享"></a>2、团队分享</h2><p>我目前在二三线城市南昌，一般都是会带团队开发，经常性会一起学习一起交流，因为行业特性带来的流动性，因技术管理带来的流动性等都会造成团队内部经常会有新人的感觉，每半年或者每一年都会有些大的变动，所以我觉得做技术分享可以让团队知道我这边想要做什么，想要什么技术。他们在学习的过程，也在跟我的思想不断的沟通，也能养成一个比较好的习惯。</p><h2 id="3、技术交流"><a href="#3、技术交流" class="headerlink" title="3、技术交流"></a>3、技术交流</h2><p>看了不少大佬现在都可以写博客、写公众号、出书、出视频进行赚钱了，我目前是没有这个水平，但是我很想交个朋友，大家能一起讨论技术，解决问题，一起开发一些开源系统。所以通过博客的方式，更有针对性的交朋友，而不是聊骚。</p><h2 id="4、影响力"><a href="#4、影响力" class="headerlink" title="4、影响力"></a>4、影响力</h2><p>通过技术博客，我也想把自己的一些经验分享出来，可以获取一些技术上的影响力，可以在业内有点知名度，有点点阅读量我就心满意足，方面我在找工作的、交流的同时有一定的拿得出手的东西。</p><h2 id="5、外快"><a href="#5、外快" class="headerlink" title="5、外快"></a>5、外快</h2><p>目前为止我在外快上面没有大的持续性突破，但是我不是不想，是实力不允许，希望不断的去努力，多学习，往大佬靠近，增强自己的人脉，扩展自己的影响力，从而会有点点可持续性的外快收入，看看大佬们是怎么玩的。</p><h1 id="3、技术博客定位"><a href="#3、技术博客定位" class="headerlink" title="3、技术博客定位"></a>3、技术博客定位</h1><p>1、JAVA Web 技术</p><p>我工作一直从事的是JAVA Web 这块的软件编程工作，还是想以这个为起点去做技术，所以后面我会继续做些这些内容的归纳和总结。</p><p>2、大数据</p><p>目前我也因业务和兴趣想要开始搭建大数据学习平台，做点大数据方向上的拓展。</p><p>3、算法方向</p><p>我研究生方向是图像算法，曾经一度在找工作的时候彷徨要不要回去做算法的努力，但是小城市温饱问题都可能解决不了，但是发展了这么久，似乎不搞点算法，以后都可能过不了年龄坎。</p><p>4、管理咨询</p><p>我带了4年多的团队了，也有点经历了，自己也有一些感受，也可以跟大家一起交流，在管理上我还是小学生，还是更多希望能有大佬来交流。当然如果有同学希望我能给出一些建议和意见，我将不吝倾囊相授。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1、前言&quot;&gt;&lt;a href=&quot;#1、前言&quot; class=&quot;headerlink&quot; title=&quot;1、前言&quot;&gt;&lt;/a&gt;1、前言&lt;/h1&gt;&lt;p&gt;在很早的时候我就搭建了自己的github 博客，打算写点东西，最早的博客是2007年搭建的，那时候都是在抒发自己的一些情感。
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
